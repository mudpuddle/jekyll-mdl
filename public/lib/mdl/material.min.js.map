{"version":3,"sources":["mdlComponentHandler.js","tabs.js","layout.js","rAF.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","textfield.js","tooltip.js","data-table.js","ripple.js","material.js"],"names":["MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","show","window","componentHandler","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","undefined","getUpgradedListOfElement_","element","dataUpgraded","getAttribute","isElementUpgraded_","jsClass","upgradedList","indexOf","upgradeDomInternal","optJsClass","optCssClass","cssClass","registeredClass","elements","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","item","prototype","slice","call","HTMLElement","children","registerInternal","config","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","callback","regClass","upgradeAllRegisteredInternal","findCreatedComponentByNodeInternal","node","deconstructComponentInternal","downgradeMethod_","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","nodes","downgradeNode","NodeList","Node","upgradeDom","upgradeElement","upgradeElements","upgradeAllRegistered","registerUpgradedCallback","register","downgradeElements","documentElement","ComponentConfig","Component","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","this","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","mdlDowngrade_","removeEventListener","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown","handleItemKeyboardEvent_","boundItemClick","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","target","MouseEvent","click","hide","stopPropagation","closing_","applyClip_","height","width","clip","addAnimationEndListener_","cleanup","transitionDuration","itemDelay","transitionDelay","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","firstChild","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","onKeyDown_","currentRowCount","checkValidity","checkDirty","input_","validity","valid","label_","hasAttribute","parseInt","isNaN","boundUpdateClassesHandler","boundKeyDownHandler","MaterialTooltip","handleMouseEnter_","props","marginLeft","offsetWidth","boundMouseLeaveHandler","handleMouseLeave_","boundMouseEnterHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","scrollTop","screenSizeHandler_","screenSizeMediaQuery_","matches","drawer_","drawerToggleHandler_","headerTransitionEndHandler_","headerClickHandler_","tabBar","directChildren","childNodes","c","child","mode","matchMedia","addListener","eatEvent","drawerButton","drawerButtonIcon","textContent","obfuscator","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabScrollHandler","scrollWidth","MaterialDataTable","DATA_TABLE","SELECTABLE","IS_SELECTED","selectRow_","checkbox","row","rows","createCheckbox_","label","type","firstHeader","th","headerCheckbox","firstCell","td","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\nwindow.componentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var downgradeMethod_ = 'mdlDowngrade_';\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {String} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|Boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!HTMLElement} element The element to fetch data from.\n   * @return {!Array<String>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!HTMLElement} element The element we want to check.\n   * @param {String} jsClass The class to check for.\n   * @returns {Boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {String=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {String=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (optJsClass === undefined && optCssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {String} */ (optJsClass);\n      if (optCssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!HTMLElement} element The element we wish to upgrade.\n   * @param {String=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!HTMLElement|!Array<!HTMLElement>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n        upgradeElementInternal(element);\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {{constructor: !Function, classAsString: String, cssClass: String, widget: String}} config\n   */\n  function registerInternal(config) {\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'widget': config.widget === undefined ? true : config.widget,\n      'callbacks': []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered.');\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {String} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Finds a created component by a given DOM node.\n   *\n   * @param {!Node} node\n   * @return {*}\n   */\n  function findCreatedComponentByNodeInternal(node) {\n    for (var n = 0; n < createdComponents_.length; n++) {\n      var component = createdComponents_[n];\n      if (component.element_ === node) {\n        return component;\n      }\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {*} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component &&\n        component[componentConfigProperty_]\n          .classConstructor.prototype\n          .hasOwnProperty(downgradeMethod_)) {\n      component[downgradeMethod_]();\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(\n          component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    var downgradeNode = function(node) {\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement =\n        componentHandler.register = function() {};\n  }\n});\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: String,\n *   cssClass: String,\n *   widget: String,\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: String,\n *   classAsString: String,\n *   cssClass: String,\n *   widget: String\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTabs = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialLayout = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    MENU_ICON: 'menu',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Modes.\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles toggling of the drawer.\n   *\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function () {\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        var directChildren = this.element_.childNodes;\n        for (var c = 0; c < directChildren.length; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        var eatEvent = function (ev) {\n            ev.preventDefault();\n        };\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = document.createElement('div');\n            drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            var drawerButtonIcon = document.createElement('i');\n            drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n            drawerButtonIcon.textContent = this.Constant_.MENU_ICON;\n            drawerButton.appendChild(drawerButtonIcon);\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            obfuscator.addEventListener('mousewheel', eatEvent);\n        }\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove buttons depending on scroll position.\n            var tabScrollHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabScrollHandler);\n            tabScrollHandler();\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (tab) {\n        if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(layout.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            selectTab();\n        });\n        tab.show = selectTab;\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    Date.now = function () {\n        return new Date().getTime();\n    };\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n}","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialButton = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n/**\n   * Downgrade the element.\n   *\n   * @private\n   */\nMaterialButton.prototype.mdlDowngrade_ = function () {\n    if (this.rippleElement_) {\n        this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);\n    }\n    this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);\n    this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialCheckbox = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);\n    }\n    this.inputElement_.removeEventListener('change', this.boundInputOnChange);\n    this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);\n    this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);\n    this.element_.removeEventListener('mouseup', this.boundElementMouseUp);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialIconToggle = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);\n    }\n    this.inputElement_.removeEventListener('change', this.boundInputOnChange);\n    this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);\n    this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);\n    this.element_.removeEventListener('mouseup', this.boundElementOnMouseUp);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialMenu = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.getAttribute('disabled') !== null) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {Number} height Height of the clip rectangle\n   * @param {Number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = null;\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = null;\n    }\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    var cleanup = function () {\n        this.element_.removeEventListener('transitionend', cleanup);\n        this.element_.removeEventListener('webkitTransitionEnd', cleanup);\n        this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n    }.bind(this);\n    // Remove animation class once the transition is done.\n    this.element_.addEventListener('transitionend', cleanup);\n    this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            if (e !== evt && !this.closing_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.transitionDelay = null;\n        }\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialMenu.prototype.mdlDowngrade_ = function () {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n        items[i].removeEventListener('click', this.boundItemClick);\n        items[i].removeEventListener('keydown', this.boundItemKeydown);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialProgress = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {Number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {Number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialProgress.prototype.mdlDowngrade_ = function () {\n    while (this.element_.firstChild) {\n        this.element_.removeChild(this.element_.firstChild);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialRadio = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i].MaterialRadio.updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n        this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n        this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n        this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSlider = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function (event) {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\n/**\n   * Update slider value.\n   *\n   * @param {Number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialSlider.prototype.mdlDowngrade_ = function () {\n    this.element_.removeEventListener('input', this.boundInputHandler);\n    this.element_.removeEventListener('change', this.boundChangeHandler);\n    this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);\n    this.element_.parentElement.removeEventListener('mousedown', this.boundContainerMouseDownHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSpinner = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {Number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSwitch = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundMouseUpHandler);\n    }\n    this.inputElement_.removeEventListener('change', this.boundChangeHandler);\n    this.inputElement_.removeEventListener('focus', this.boundFocusHandler);\n    this.inputElement_.removeEventListener('blur', this.boundBlurHandler);\n    this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTextfield = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n};\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Update text field value.\n   *\n   * @param {String} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    if (value) {\n        this.input_.value = value;\n    }\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialTextfield.prototype.mdlDowngrade_ = function () {\n    this.input_.removeEventListener('input', this.boundUpdateClassesHandler);\n    this.input_.removeEventListener('focus', this.boundFocusHandler);\n    this.input_.removeEventListener('blur', this.boundBlurHandler);\n    if (this.boundKeyDownHandler) {\n        this.input_.removeEventListener('keydown', this.boundKeyDownHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTooltip = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = { IS_ACTIVE: 'is-active' };\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    event.stopPropagation();\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n    } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n    }\n    this.element_.style.top = props.top + props.height + 10 + 'px';\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n    window.addEventListener('scroll', this.boundMouseLeaveHandler, false);\n    window.addEventListener('touchmove', this.boundMouseLeaveHandler, false);\n};\n/**\n   * Handle mouseleave for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseLeave_ = function (event) {\n    event.stopPropagation();\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n    window.removeEventListener('scroll', this.boundMouseLeaveHandler);\n    window.removeEventListener('touchmove', this.boundMouseLeaveHandler, false);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // Tabindex needs to be set for `blur` events to be emitted\n            if (!this.forElement_.getAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('click', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('blur', this.boundMouseLeaveHandler);\n            this.forElement_.addEventListener('touchstart', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler);\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialTooltip.prototype.mdlDowngrade_ = function () {\n    if (this.forElement_) {\n        this.forElement_.removeEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('click', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('touchstart', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('mouseleave', this.boundMouseLeaveHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialDataTable = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {HTMLElement} checkbox Checkbox that toggles the selection state.\n   * @param {HTMLElement} row Row to toggle when checkbox changes.\n   * @param {HTMLElement[]} rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < rows.length; i++) {\n                    el = rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el.MaterialCheckbox.check();\n                    rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < rows.length; i++) {\n                    el = rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el.MaterialCheckbox.uncheck();\n                    rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {HTMLElement} row Row to toggle when checkbox changes.\n   * @param {HTMLElement[]} rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, rows) {\n    var label = document.createElement('label');\n    label.classList.add('mdl-checkbox');\n    label.classList.add('mdl-js-checkbox');\n    label.classList.add('mdl-js-ripple-effect');\n    label.classList.add('mdl-data-table__select');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var rows = this.element_.querySelector('tbody').querySelectorAll('tr');\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    var rowCheckbox = this.createCheckbox_(rows[i]);\n                    td.appendChild(rowCheckbox);\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialRipple = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n    }\n    // Allow a repaint to occur before removing this class, so the animation\n    // shows for tap events, which seem to trigger a mouseup too soon after\n    // mousedown.\n    window.setTimeout(function () {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n    }.bind(this), 0);\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialRipple.prototype.mdlDowngrade_ = function () {\n    this.element_.removeEventListener('mousedown', this.boundDownHandler);\n    this.element_.removeEventListener('touchstart', this.boundDownHandler);\n    this.element_.removeEventListener('mouseup', this.boundUpHandler);\n    this.element_.removeEventListener('mouseleave', this.boundUpHandler);\n    this.element_.removeEventListener('touchend', this.boundUpHandler);\n    this.element_.removeEventListener('blur', this.boundUpHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});",";(function() {\n\"use strict\";\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\nwindow.componentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var downgradeMethod_ = 'mdlDowngrade_';\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {String} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|Boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!HTMLElement} element The element to fetch data from.\n   * @return {!Array<String>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!HTMLElement} element The element we want to check.\n   * @param {String} jsClass The class to check for.\n   * @returns {Boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {String=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {String=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (optJsClass === undefined && optCssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {String} */ (optJsClass);\n      if (optCssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!HTMLElement} element The element we wish to upgrade.\n   * @param {String=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!HTMLElement|!Array<!HTMLElement>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n        upgradeElementInternal(element);\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {{constructor: !Function, classAsString: String, cssClass: String, widget: String}} config\n   */\n  function registerInternal(config) {\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'widget': config.widget === undefined ? true : config.widget,\n      'callbacks': []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered.');\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {String} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Finds a created component by a given DOM node.\n   *\n   * @param {!Node} node\n   * @return {*}\n   */\n  function findCreatedComponentByNodeInternal(node) {\n    for (var n = 0; n < createdComponents_.length; n++) {\n      var component = createdComponents_[n];\n      if (component.element_ === node) {\n        return component;\n      }\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {*} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component &&\n        component[componentConfigProperty_]\n          .classConstructor.prototype\n          .hasOwnProperty(downgradeMethod_)) {\n      component[downgradeMethod_]();\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(\n          component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    var downgradeNode = function(node) {\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement =\n        componentHandler.register = function() {};\n  }\n});\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: String,\n *   cssClass: String,\n *   widget: String,\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: String,\n *   classAsString: String,\n *   cssClass: String,\n *   widget: String\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    Date.now = function () {\n        return new Date().getTime();\n    };\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n}\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialButton = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n/**\n   * Downgrade the element.\n   *\n   * @private\n   */\nMaterialButton.prototype.mdlDowngrade_ = function () {\n    if (this.rippleElement_) {\n        this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);\n    }\n    this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);\n    this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialCheckbox = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);\n    }\n    this.inputElement_.removeEventListener('change', this.boundInputOnChange);\n    this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);\n    this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);\n    this.element_.removeEventListener('mouseup', this.boundElementMouseUp);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialIconToggle = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);\n    }\n    this.inputElement_.removeEventListener('change', this.boundInputOnChange);\n    this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);\n    this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);\n    this.element_.removeEventListener('mouseup', this.boundElementOnMouseUp);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialMenu = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.getAttribute('disabled') !== null) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {Number} height Height of the clip rectangle\n   * @param {Number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = null;\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = null;\n    }\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    var cleanup = function () {\n        this.element_.removeEventListener('transitionend', cleanup);\n        this.element_.removeEventListener('webkitTransitionEnd', cleanup);\n        this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n    }.bind(this);\n    // Remove animation class once the transition is done.\n    this.element_.addEventListener('transitionend', cleanup);\n    this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            if (e !== evt && !this.closing_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.transitionDelay = null;\n        }\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialMenu.prototype.mdlDowngrade_ = function () {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n        items[i].removeEventListener('click', this.boundItemClick);\n        items[i].removeEventListener('keydown', this.boundItemKeydown);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialProgress = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {Number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {Number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialProgress.prototype.mdlDowngrade_ = function () {\n    while (this.element_.firstChild) {\n        this.element_.removeChild(this.element_.firstChild);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialRadio = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i].MaterialRadio.updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n        this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n        this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n        this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSlider = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function (event) {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\n/**\n   * Update slider value.\n   *\n   * @param {Number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialSlider.prototype.mdlDowngrade_ = function () {\n    this.element_.removeEventListener('input', this.boundInputHandler);\n    this.element_.removeEventListener('change', this.boundChangeHandler);\n    this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);\n    this.element_.parentElement.removeEventListener('mousedown', this.boundContainerMouseDownHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSpinner = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {Number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialSwitch = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function (event) {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n/**\n   * Downgrade the component.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.mdlDowngrade_ = function () {\n    if (this.rippleContainerElement_) {\n        this.rippleContainerElement_.removeEventListener('mouseup', this.boundMouseUpHandler);\n    }\n    this.inputElement_.removeEventListener('change', this.boundChangeHandler);\n    this.inputElement_.removeEventListener('focus', this.boundFocusHandler);\n    this.inputElement_.removeEventListener('blur', this.boundBlurHandler);\n    this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTabs = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTextfield = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n};\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\n/**\n   * Update text field value.\n   *\n   * @param {String} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    if (value) {\n        this.input_.value = value;\n    }\n    this.updateClasses_();\n};\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialTextfield.prototype.mdlDowngrade_ = function () {\n    this.input_.removeEventListener('input', this.boundUpdateClassesHandler);\n    this.input_.removeEventListener('focus', this.boundFocusHandler);\n    this.input_.removeEventListener('blur', this.boundBlurHandler);\n    if (this.boundKeyDownHandler) {\n        this.input_.removeEventListener('keydown', this.boundKeyDownHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialTooltip = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = { IS_ACTIVE: 'is-active' };\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    event.stopPropagation();\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n    } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n    }\n    this.element_.style.top = props.top + props.height + 10 + 'px';\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n    window.addEventListener('scroll', this.boundMouseLeaveHandler, false);\n    window.addEventListener('touchmove', this.boundMouseLeaveHandler, false);\n};\n/**\n   * Handle mouseleave for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseLeave_ = function (event) {\n    event.stopPropagation();\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n    window.removeEventListener('scroll', this.boundMouseLeaveHandler);\n    window.removeEventListener('touchmove', this.boundMouseLeaveHandler, false);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // Tabindex needs to be set for `blur` events to be emitted\n            if (!this.forElement_.getAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('click', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('blur', this.boundMouseLeaveHandler);\n            this.forElement_.addEventListener('touchstart', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler);\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialTooltip.prototype.mdlDowngrade_ = function () {\n    if (this.forElement_) {\n        this.forElement_.removeEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('click', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('touchstart', this.boundMouseEnterHandler, false);\n        this.forElement_.removeEventListener('mouseleave', this.boundMouseLeaveHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialLayout = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    MENU_ICON: 'menu',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Modes.\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles toggling of the drawer.\n   *\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function () {\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        var directChildren = this.element_.childNodes;\n        for (var c = 0; c < directChildren.length; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        var eatEvent = function (ev) {\n            ev.preventDefault();\n        };\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = document.createElement('div');\n            drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            var drawerButtonIcon = document.createElement('i');\n            drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n            drawerButtonIcon.textContent = this.Constant_.MENU_ICON;\n            drawerButton.appendChild(drawerButtonIcon);\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            obfuscator.addEventListener('mousewheel', eatEvent);\n        }\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove buttons depending on scroll position.\n            var tabScrollHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabScrollHandler);\n            tabScrollHandler();\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (tab) {\n        if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(layout.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            selectTab();\n        });\n        tab.show = selectTab;\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialDataTable = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {HTMLElement} checkbox Checkbox that toggles the selection state.\n   * @param {HTMLElement} row Row to toggle when checkbox changes.\n   * @param {HTMLElement[]} rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < rows.length; i++) {\n                    el = rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el.MaterialCheckbox.check();\n                    rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < rows.length; i++) {\n                    el = rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el.MaterialCheckbox.uncheck();\n                    rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {HTMLElement} row Row to toggle when checkbox changes.\n   * @param {HTMLElement[]} rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, rows) {\n    var label = document.createElement('label');\n    label.classList.add('mdl-checkbox');\n    label.classList.add('mdl-js-checkbox');\n    label.classList.add('mdl-js-ripple-effect');\n    label.classList.add('mdl-data-table__select');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var rows = this.element_.querySelector('tbody').querySelectorAll('tr');\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    var rowCheckbox = this.createCheckbox_(rows[i]);\n                    td.appendChild(rowCheckbox);\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow.MaterialRipple = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {String | Number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {String}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n    }\n    // Allow a repaint to occur before removing this class, so the animation\n    // shows for tap events, which seem to trigger a mouseup too soon after\n    // mousedown.\n    window.setTimeout(function () {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n    }.bind(this), 0);\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n/**\n   * Downgrade the component\n   *\n   * @private\n   */\nMaterialRipple.prototype.mdlDowngrade_ = function () {\n    this.element_.removeEventListener('mousedown', this.boundDownHandler);\n    this.element_.removeEventListener('touchstart', this.boundDownHandler);\n    this.element_.removeEventListener('mouseup', this.boundUpHandler);\n    this.element_.removeEventListener('mouseleave', this.boundUpHandler);\n    this.element_.removeEventListener('touchend', this.boundUpHandler);\n    this.element_.removeEventListener('blur', this.boundUpHandler);\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n}());\n"],"sourceRoot":"/source/"}